--
--
------------------------------------------
--
-- DISABLE AUTO-COMMIT BEFORE RUNNING THIS SCRIPT
--
-- ENABLE ONCE COMPLETE
--
------------------------------------------
--
-- Script:			06_EXTRACT_TABLES.sql
-- SAIL project:	1483 - Cardiovascular disease risk prediction and optimisation of risk factor management
--
-- About:			Creates extracts of base record tables limited to ASCVD patients
-- Author:			Daniel King
------------------------------------------
--
-- Extract of WLGP_EVENT_CLEANSED
------------------------------------------
--
--Drop Tables
CALL FNC.DROP_IF_EXISTS('SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED');
COMMIT;
------------------------------------------
--
--Create Table
--
CREATE TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
	ALF_PE			BIGINT,
	ALF_STS_CD		VARCHAR(2),
	GNDR_CD 		VARCHAR(1),
	WOB				DATE,
	PRAC_CD_PE		BIGINT,
	LOCAL_NUM_PE	BIGINT,
	EVENT_CD		VARCHAR(40),
	EVENT_VAL		DECIMAL(31,8),
	EVENT_DT		DATE
);
COMMIT;	
------------------------------------------
--
-- Insert into table
--
-- Groups of years prior to 2000, then 1 year at a time
--
-- <1990
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR < 1990 
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 1990-1993
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR BETWEEN 1990 AND 1993
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 1994-1997
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR BETWEEN 1994 AND 1997
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 1998-1999
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR BETWEEN 1998 AND 1999
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 2000
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR = 2000 
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 2001
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR = 2001 
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 2002
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR = 2002
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 2003
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR = 2003
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 2004
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR = 2004 
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 2005
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR = 2005
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 2006
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR = 2006
);
COMMIT;
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 2007
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR = 2007
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 2008
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR = 2008
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 2009
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR = 2009
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 2010
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR = 2010
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 2011
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR = 2011
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 2012
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR = 2012
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 2013
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR = 2013
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 2014
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR = 2014
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 2015
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR = 2015
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 2016
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR = 2016
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 2017
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR = 2017 
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 2018
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR = 2018
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 2019
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR = 2019
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 2020
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR = 2020
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 2021
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR = 2021
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED ACTIVATE NOT LOGGED INITIALLY;
--
-- 2022
INSERT INTO SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
(
SELECT
	GP.ALF_PE,
	GP.ALF_STS_CD,
	GP.GNDR_CD,
	GP.WOB,
	GP.PRAC_CD_PE,
	GP.LOCAL_NUM_PE,
	GP.EVENT_CD,
	GP.EVENT_VAL,
	GP.EVENT_DT
FROM
	SAILW1483V.GP_DATA GP

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = GP.ALF_PE
	
WHERE GP.EVENT_YR = 2022
);
COMMIT;	
--
------------------------------------------
--
-- Select all results
SELECT 
	* 
FROM 
	SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
ORDER BY ALF_PE
FETCH FIRST 100 ROWS ONLY;
--
-- Count all results
SELECT 
	COUNT(*)
FROM 
	SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
;
--
-- Count distinct alfs
SELECT 
	COUNT(DISTINCT ALF_PE)
FROM 
	SAILW1483V.EXTRACT_WLGP_GP_EVENT_CLEANSED
;
------------------------------------------
--
-- Extracts of PEDW tables
------------------------------------------
--
--Drop Tables
CALL FNC.DROP_IF_EXISTS('SAILW1483V.EXTRACT_PEDW_DIAG');
CALL FNC.DROP_IF_EXISTS('SAILW1483V.EXTRACT_PEDW_EPISODE');
CALL FNC.DROP_IF_EXISTS('SAILW1483V.EXTRACT_PEDW_SPELL');
COMMIT;
------------------------------------------
--
--Create Tables
--
--PEDW_DIAG
CREATE TABLE SAILW1483V.EXTRACT_PEDW_DIAG AS
(
SELECT
	*
FROM
	SAILW1483V.PEDW_DIAG_DATA
)	
WITH NO DATA;
COMMIT;	
--
--PEDW_EPI
CREATE TABLE SAILW1483V.EXTRACT_PEDW_EPISODE AS
(
SELECT
	*
FROM 
	SAILW1483V.PEDW_EPI_DATA
)	
WITH NO DATA;
COMMIT;	
--
--PEDW_SPELL
CREATE TABLE SAILW1483V.EXTRACT_PEDW_SPELL AS
(
SELECT
	*
FROM 
	SAILW1483V.PEDW_SPELL_DATA
)	
WITH NO DATA;
COMMIT;	
------------------------------------------
--
--Insert into tables
--
--
ALTER TABLE SAILW1483V.EXTRACT_PEDW_DIAG ACTIVATE NOT LOGGED INITIALLY;
--
--PEDW_DIAG
INSERT INTO SAILW1483V.EXTRACT_PEDW_DIAG
(
SELECT
	D.*
FROM
	SAILW1483V.PEDW_DIAG_DATA D

LEFT JOIN SAILW1483V.PEDW_EPI_DATA E
	ON E.PROV_UNIT_CD = D.PROV_UNIT_CD
	AND E.SPELL_NUM_PE = D.SPELL_NUM_PE
	AND E.EPI_NUM = D.EPI_NUM

LEFT JOIN SAILW1483V.PEDW_SPELL_DATA S
	ON S.PROV_UNIT_CD = E.PROV_UNIT_CD 
	AND S.SPELL_NUM_PE = E.SPELL_NUM_PE
	
JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = S.ALF_PE
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_PEDW_EPISODE ACTIVATE NOT LOGGED INITIALLY;
--
--PEDW_EPI
INSERT INTO SAILW1483V.EXTRACT_PEDW_EPISODE
(
SELECT
	E.*
FROM 
	SAILW1483V.PEDW_EPI_DATA E

LEFT JOIN SAILW1483V.PEDW_SPELL_DATA S
	ON S.PROV_UNIT_CD = E.PROV_UNIT_CD 
	AND S.SPELL_NUM_PE = E.SPELL_NUM_PE
	
JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A
	ON A.ALF_PE = S.ALF_PE
);
COMMIT;	
--
--
ALTER TABLE SAILW1483V.EXTRACT_PEDW_SPELL ACTIVATE NOT LOGGED INITIALLY;
--
--PEDW_SPELL
INSERT INTO SAILW1483V.EXTRACT_PEDW_SPELL
(
SELECT
	S.*
FROM 
	SAILW1483V.PEDW_SPELL_DATA S

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON A.ALF_PE = S.ALF_PE
);
COMMIT;	
--
------------------------------------------
--
-- Select all results
SELECT 
	* 
FROM 
	SAILW1483V.EXTRACT_PEDW_DIAG
FETCH FIRST 100 ROWS ONLY;
--
SELECT 
	* 
FROM 
	SAILW1483V.EXTRACT_PEDW_EPISODE
FETCH FIRST 100 ROWS ONLY;
--
SELECT 
	* 
FROM 
	SAILW1483V.EXTRACT_PEDW_SPELL
ORDER BY ALF_PE
FETCH FIRST 100 ROWS ONLY;
--
-- Count all results
SELECT 
	COUNT(*) 
FROM 
	SAILW1483V.EXTRACT_PEDW_DIAG
;
--
SELECT 
	COUNT(*)  
FROM 
	SAILW1483V.EXTRACT_PEDW_EPISODE
;
--
SELECT 
	COUNT(*)  
FROM 
	SAILW1483V.EXTRACT_PEDW_SPELL
;
-- Count distinct ALFs
--
SELECT 
	COUNT(DISTINCT ALF_PE)  
FROM 
	SAILW1483V.EXTRACT_PEDW_SPELL
;
------------------------------------------
--
-- Extract of ADDE_DEATHS
------------------------------------------
--
-- Create alias' for ADDE table
CREATE OR REPLACE ALIAS SAILW1483V.ADDE_DATA
	FOR SAIL1483V.ADDE_DEATHS_20230601;
------------------------------------------
--
--Drop Tables
CALL FNC.DROP_IF_EXISTS('SAILW1483V.EXTRACT_ADDE_DEATHS');
COMMIT;
------------------------------------------
--
--Create Tables
CREATE TABLE SAILW1483V.EXTRACT_ADDE_DEATHS
(
	ALF_PE							BIGINT,
	ALF_STS_CD						VARCHAR(2),
	DEATH_DT						TIMESTAMP,
	DEATH_DT_VALID					VARCHAR(7),
	DEATHCAUSE_DIAG_UNDERLYING_CD	VARCHAR(5),
	DEATHCAUSE_DIAG_1_CD			VARCHAR(5),	
	DEATHCAUSE_DIAG_2_CD			VARCHAR(5),	
	DEATHCAUSE_DIAG_3_CD			VARCHAR(5),
	DEATHCAUSE_DIAG_4_CD			VARCHAR(5),	
	DEATHCAUSE_DIAG_5_CD			VARCHAR(5),	
	DEATHCAUSE_DIAG_6_CD			VARCHAR(5),	
	DEATHCAUSE_DIAG_7_CD			VARCHAR(5),
	DEATHCAUSE_DIAG_8_CD			VARCHAR(5)
)	
;
COMMIT;	
------------------------------------------
--
--Insert into table
--
ALTER TABLE SAILW1483V.EXTRACT_ADDE_DEATHS ACTIVATE NOT LOGGED INITIALLY;
--
INSERT INTO SAILW1483V.EXTRACT_ADDE_DEATHS
(
SELECT
	D.ALF_PE,
	D.ALF_STS_CD,
	CAST(D.DEATH_DT AS DATE) AS DEATH_DT,
	D.DEATH_DT_VALID,
	D.DEATHCAUSE_DIAG_UNDERLYING_CD,
	D.DEATHCAUSE_DIAG_1_CD,	
	D.DEATHCAUSE_DIAG_2_CD,	
	D.DEATHCAUSE_DIAG_3_CD,
	D.DEATHCAUSE_DIAG_4_CD,	
	D.DEATHCAUSE_DIAG_5_CD,	
	D.DEATHCAUSE_DIAG_6_CD,	
	D.DEATHCAUSE_DIAG_7_CD,
	D.DEATHCAUSE_DIAG_8_CD
FROM 
	SAILW1483V.ADDE_DATA D

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON D.ALF_PE = A.ALF_PE
);
COMMIT;	
--
------------------------------------------
--
-- Select all results
SELECT 
	* 
FROM 
	SAILW1483V.EXTRACT_ADDE_DEATHS
ORDER BY ALF_PE
FETCH FIRST 100 ROWS ONLY;
--
-- Count all results
SELECT 
	COUNT(*)
FROM 
	SAILW1483V.EXTRACT_ADDE_DEATHS
;
--
-- Count distinct alfs
SELECT 
	COUNT(DISTINCT ALF_PE)
FROM 
	SAILW1483V.EXTRACT_ADDE_DEATHS
;
------------------------------------------
--
-- Extract of WDSD_PER_RESIDENCE_GPREG
------------------------------------------
--
--Drop Table
CALL FNC.DROP_IF_EXISTS('SAILW1483V.EXTRACT_WDSD_PER_RESIDENCE_GPREG');
COMMIT;
------------------------------------------
--
--Create Table
CREATE TABLE SAILW1483V.EXTRACT_WDSD_PER_RESIDENCE_GPREG AS
(
SELECT
	*
FROM 
	SAILW1483V.WDSD_DATA
)	
WITH NO DATA;
COMMIT;	
------------------------------------------
--
--Insert into table
--
ALTER TABLE SAILW1483V.EXTRACT_WDSD_PER_RESIDENCE_GPREG ACTIVATE NOT LOGGED INITIALLY;
--
INSERT INTO SAILW1483V.EXTRACT_WDSD_PER_RESIDENCE_GPREG
(
SELECT
	W.*
FROM 
	SAILW1483V.WDSD_DATA W

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON W.ALF_PE = A.ALF_PE
);
COMMIT;	
--
------------------------------------------
--
-- Select all results
SELECT 
	* 
FROM 
	SAILW1483V.EXTRACT_WDSD_PER_RESIDENCE_GPREG
ORDER BY ALF_PE
FETCH FIRST 100 ROWS ONLY;
--
-- Count all results
SELECT 
	COUNT(*)
FROM 
	SAILW1483V.EXTRACT_WDSD_PER_RESIDENCE_GPREG
;
--
-- Count distinct alfs
SELECT 
	COUNT(DISTINCT ALF_PE)
FROM 
	SAILW1483V.EXTRACT_WDSD_PER_RESIDENCE_GPREG
;
------------------------------------------
--
-- Extract of WDSD_SINGLE_CLEAN_GEO_CHAR_LSOA2011
------------------------------------------
--
-- Create alias for WDSD table
CREATE OR REPLACE ALIAS SAILW1483V.WDSD_GEOCHAR_DATA
	FOR SAIL1483V.WDSD_SINGLE_CLEAN_GEO_CHAR_LSOA2011_20230605;
------------------------------------------
--
--Drop Table
CALL FNC.DROP_IF_EXISTS('SAILW1483V.EXTRACT_WDSD_SINGLE_CLEAN_GEO_CHAR_LSOA2011');
COMMIT;
------------------------------------------
--
--Create Table
CREATE TABLE SAILW1483V.EXTRACT_WDSD_SINGLE_CLEAN_GEO_CHAR_LSOA2011
(
	ALF_PE							BIGINT,
	START_DATE						DATE,
	END_DATE						DATE,
	LSOA2011_CD						VARCHAR(10),
	LSOA2011_DESC					VARCHAR(45),	
	LSOA2011_ONS_DESC				VARCHAR(26),	
	LSOA_DESC						VARCHAR(17),
	WELSH_ADDRESS					INTEGER,	
	WIMD_2019_QUINTILE				INTEGER,	
	WIMD_2019_QUINTILE_DESC			VARCHAR(17)	
)	
;
COMMIT;	
------------------------------------------
--
--Insert into table
--
ALTER TABLE SAILW1483V.EXTRACT_WDSD_SINGLE_CLEAN_GEO_CHAR_LSOA2011 ACTIVATE NOT LOGGED INITIALLY;
--
INSERT INTO SAILW1483V.EXTRACT_WDSD_SINGLE_CLEAN_GEO_CHAR_LSOA2011
(
SELECT
	W.ALF_PE,
	W.START_DATE,
	W.END_DATE,
	W.LSOA2011_CD,
	W.LSOA2011_DESC,	
	W.LSOA2011_ONS_DESC,	
	W.LSOA_DESC,
	W.WELSH_ADDRESS,	
	W.WIMD_2019_QUINTILE,	
	W.WIMD_2019_QUINTILE_DESC	
FROM 
	SAILW1483V.WDSD_GEOCHAR_DATA W

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON W.ALF_PE = A.ALF_PE
);
COMMIT;	
--
------------------------------------------
--
-- Select all results
SELECT 
	* 
FROM 
	SAILW1483V.EXTRACT_WDSD_SINGLE_CLEAN_GEO_CHAR_LSOA2011
ORDER BY ALF_PE
FETCH FIRST 100 ROWS ONLY;
--
-- Count all results
SELECT 
	COUNT(*)
FROM 
	SAILW1483V.EXTRACT_WDSD_SINGLE_CLEAN_GEO_CHAR_LSOA2011
;
--
-- Count distinct alfs
SELECT 
	COUNT(DISTINCT ALF_PE)
FROM 
	SAILW1483V.EXTRACT_WDSD_SINGLE_CLEAN_GEO_CHAR_LSOA2011
;
------------------------------------------
--
-- Extract of WDSD_SINGLE_CLEAN_GEO_WALES
------------------------------------------
--
-- Create alias for WDSD table
CREATE OR REPLACE ALIAS SAILW1483V.WDSD_WELSH_RES_DATA
	FOR SAIL1483V.WDSD_SINGLE_CLEAN_GEO_WALES_20230605;
------------------------------------------
--
--Drop Table
CALL FNC.DROP_IF_EXISTS('SAILW1483V.EXTRACT_WDSD_SINGLE_CLEAN_GEO_WALES');
COMMIT;
------------------------------------------
--
--Create Table
CREATE TABLE SAILW1483V.EXTRACT_WDSD_SINGLE_CLEAN_GEO_WALES AS
(
SELECT
	*
FROM 
	SAILW1483V.WDSD_WELSH_RES_DATA
)	
WITH NO DATA;
COMMIT;	
------------------------------------------
--
--Insert into table
--
ALTER TABLE SAILW1483V.EXTRACT_WDSD_SINGLE_CLEAN_GEO_WALES ACTIVATE NOT LOGGED INITIALLY;
--
INSERT INTO SAILW1483V.EXTRACT_WDSD_SINGLE_CLEAN_GEO_WALES
(
SELECT
	W.*
FROM 
	SAILW1483V.WDSD_WELSH_RES_DATA W

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON W.ALF_PE = A.ALF_PE
);
COMMIT;	
--
------------------------------------------
--
-- Select all results
SELECT 
	* 
FROM 
	SAILW1483V.EXTRACT_WDSD_SINGLE_CLEAN_GEO_WALES
ORDER BY ALF_PE
FETCH FIRST 100 ROWS ONLY;
--
-- Count all results
SELECT 
	COUNT(*)
FROM 
	SAILW1483V.EXTRACT_WDSD_SINGLE_CLEAN_GEO_WALES
;
--
-- Count distinct alfs
SELECT 
	COUNT(DISTINCT ALF_PE)
FROM 
	SAILW1483V.EXTRACT_WDSD_SINGLE_CLEAN_GEO_WALES
;
------------------------------------------
--
-- Extract of WLGP_CLEAN_GP_REG_BY_PRAC_INCLNONSAIL_MEDIAN
------------------------------------------
--
-- Create alias for GP table
CREATE OR REPLACE ALIAS SAILW1483V.GP_NON_SAIL_REG_DATA
	FOR SAIL1483V.WLGP_CLEAN_GP_REG_BY_PRAC_INCLNONSAIL_MEDIAN_20230401;
------------------------------------------
--
--Drop Table
CALL FNC.DROP_IF_EXISTS('SAILW1483V.EXTRACT_WLGP_CLEAN_GP_REG_BY_PRAC_INCLNONSAIL_MEDIAN');
COMMIT;
------------------------------------------
--
--Create Table
CREATE TABLE SAILW1483V.EXTRACT_WLGP_CLEAN_GP_REG_BY_PRAC_INCLNONSAIL_MEDIAN AS
(
SELECT
	*
FROM 
	SAILW1483V.GP_NON_SAIL_REG_DATA
)	
WITH NO DATA;
COMMIT;	
------------------------------------------
--
--Insert into table
--
ALTER TABLE SAILW1483V.EXTRACT_WLGP_CLEAN_GP_REG_BY_PRAC_INCLNONSAIL_MEDIAN ACTIVATE NOT LOGGED INITIALLY;
--
INSERT INTO SAILW1483V.EXTRACT_WLGP_CLEAN_GP_REG_BY_PRAC_INCLNONSAIL_MEDIAN
(
SELECT
	G.*
FROM 
	SAILW1483V.GP_NON_SAIL_REG_DATA G

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON G.ALF_PE = A.ALF_PE
);
COMMIT;
--
------------------------------------------
--
-- Select all results
SELECT 
	* 
FROM 
	SAILW1483V.EXTRACT_WLGP_CLEAN_GP_REG_BY_PRAC_INCLNONSAIL_MEDIAN
ORDER BY ALF_PE
FETCH FIRST 100 ROWS ONLY;
--
-- Count all results
SELECT 
	COUNT(*)
FROM 
	SAILW1483V.EXTRACT_WLGP_CLEAN_GP_REG_BY_PRAC_INCLNONSAIL_MEDIAN
;
--
-- Count distinct alfs
SELECT 
	COUNT(DISTINCT ALF_PE)
FROM 
	SAILW1483V.EXTRACT_WLGP_CLEAN_GP_REG_BY_PRAC_INCLNONSAIL_MEDIAN
;
------------------------------------------
--
-- Extract of WRRS_OBSERVATION_RESULT
------------------------------------------
--
-- Create alias for GP table
CREATE OR REPLACE ALIAS SAILW1483V.WRRS_RESULT_DATA
	FOR SAIL1483V.WRRS_OBSERVATION_RESULT_20230615;
------------------------------------------
--
--Drop Table
CALL FNC.DROP_IF_EXISTS('SAILW1483V.EXTRACT_WRRS_OBSERVATION_RESULT');
COMMIT;
------------------------------------------
--
--Create Table
CREATE TABLE SAILW1483V.EXTRACT_WRRS_OBSERVATION_RESULT
(
	ALF_PE							BIGINT,
	SPCM_COLLECTED_DT				DATE,
	VAL_TYPE						VARCHAR(3),
	CODE							VARCHAR(30),	
	NAME							VARCHAR(90),	
	READ_CD							VARCHAR(9),
	VAL								VARCHAR(100),	
	UNITOFMEASUREMENT				VARCHAR(25)
)
;
COMMIT;	
------------------------------------------
--
--Insert into table
--
ALTER TABLE SAILW1483V.EXTRACT_WRRS_OBSERVATION_RESULT ACTIVATE NOT LOGGED INITIALLY;
--
INSERT INTO SAILW1483V.EXTRACT_WRRS_OBSERVATION_RESULT
(
SELECT
	W.ALF_PE,
	SPCM_COLLECTED_DT,
	VAL_TYPE,
	CODE,	
	NAME,	
	READ_CD,
	VAL,	
	UNITOFMEASUREMENT
FROM 
	SAILW1483V.WRRS_RESULT_DATA W

JOIN SAILW1483V.PREP_ALF_TOP_CONSORT A	
	ON W.ALF_PE = A.ALF_PE
);
COMMIT;
--
------------------------------------------
--
-- Select all results
SELECT 
	* 
FROM 
	SAILW1483V.EXTRACT_WRRS_OBSERVATION_RESULT
ORDER BY ALF_PE
FETCH FIRST 100 ROWS ONLY;
--
-- Count all results
SELECT 
	COUNT(*)
FROM 
	SAILW1483V.EXTRACT_WRRS_OBSERVATION_RESULT
;
--
-- Count distinct alfs
SELECT 
	COUNT(DISTINCT ALF_PE)
FROM 
	SAILW1483V.EXTRACT_WRRS_OBSERVATION_RESULT
;
